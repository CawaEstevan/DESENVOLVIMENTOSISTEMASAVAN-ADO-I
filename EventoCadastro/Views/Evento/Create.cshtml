@model SeuProjeto.ViewModels.EventoViewModel
@{
    ViewData["Title"] = "Cadastro de Evento";
}

<h2>Cadastro de Evento</h2>

<form asp-controller="Evento" asp-action="Salvar" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    
    <div class="form-group">
        <label asp-for="Nome" class="control-label"></label>
        <input asp-for="Nome" class="form-control" />
        <span asp-validation-for="Nome" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="NumeroParticipantes" class="control-label"></label>
        <input asp-for="NumeroParticipantes" class="form-control" type="number" />
        <span asp-validation-for="NumeroParticipantes" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Data" class="control-label"></label>
        <input asp-for="Data" class="form-control" type="datetime-local" />
        <span asp-validation-for="Data" class="text-danger"></span>
    </div>

    <div class="form-group form-check">
        <input asp-for="Ativo" class="form-check-input" type="checkbox" />
        <label asp-for="Ativo" class="form-check-label"></label>
        <span asp-validation-for="Ativo" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Salvar Evento" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Validação customizada adicional para data
        $(document).ready(function() {
            $('form').submit(function(e) {
                var dataInput = $('#Data').val();
                if (dataInput) {
                    var dataSelecionada = new Date(dataInput);
                    var dataAtual = new Date();
                    dataAtual.setHours(0, 0, 0, 0);
                    
                    if (dataSelecionada < dataAtual) {
                        e.preventDefault();
                        $('#Data').addClass('is-invalid');
                        var errorSpan = $('span[data-valmsg-for="Data"]');
                        errorSpan.text('A data não pode ser menor que a data atual');
                        errorSpan.removeClass('field-validation-valid').addClass('field-validation-error');
                        return false;
                    }
                }
            });
            
            // Limpar erro quando usuário corrigir
            $('#Data').on('change', function() {
                var dataInput = $(this).val();
                if (dataInput) {
                    var dataSelecionada = new Date(dataInput);
                    var dataAtual = new Date();
                    dataAtual.setHours(0, 0, 0, 0);
                    
                    if (dataSelecionada >= dataAtual) {
                        $(this).removeClass('is-invalid');
                        var errorSpan = $('span[data-valmsg-for="Data"]');
                        errorSpan.text('');
                        errorSpan.removeClass('field-validation-error').addClass('field-validation-valid');
                    }
                }
            });
        });
    </script>
}